// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.23.0
// source: query.sql

package db

import (
	"context"
)

const station = `-- name: Station :one
select id, slug, name, created_at from stations where slug = $1
`

func (q *Queries) Station(ctx context.Context, slug string) (Station, error) {
	row := q.db.QueryRow(ctx, station, slug)
	var i Station
	err := row.Scan(
		&i.ID,
		&i.Slug,
		&i.Name,
		&i.CreatedAt,
	)
	return i, err
}

const stations = `-- name: Stations :many
select id, slug, name, created_at from stations
`

func (q *Queries) Stations(ctx context.Context) ([]Station, error) {
	rows, err := q.db.Query(ctx, stations)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []Station
	for rows.Next() {
		var i Station
		if err := rows.Scan(
			&i.ID,
			&i.Slug,
			&i.Name,
			&i.CreatedAt,
		); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
